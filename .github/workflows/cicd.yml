name: CI/CD para EC2 p√∫blica e privada

on:
  push:
    branches:
      - main # Branch principal para deploy

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        host:
         - ${{ secrets.REMOTE_HOST   }}
         - ${{ secrets.REMOTE_HOST_B }}
    steps:
      # 1Ô∏è‚É£ Checkout do c√≥digo
      - name: Checkout do Reposit√≥rio
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Configura√ß√£o do Node.js (para o frontend)
      - name: FE - Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 3Ô∏è‚É£ Debug inicial (confere diret√≥rios)
      - name: Verificar diret√≥rio atual
        run: |
          pwd
          ls -R

      # 4Ô∏è‚É£ Build da aplica√ß√£o (React/Vite)
      - name: FE - Instalar Depend√™ncias e Fazer Build
        run: |
          npm install
          npm run build --if-present
        working-directory: Frontend-projetoMima/projeto-MimaStore

      # 5Ô∏è‚É£ Aguardar inicializa√ß√£o da EC2
      - name: Aguardar inicializa√ß√£o da EC2
        run: sleep 40

      # 6Ô∏è‚É£ Copiar arquivos do frontend via SSH (rsync)
      - name: FE - Copiar arquivos e Deploy (Usando SSH com rsync)
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ matrix.host }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: /home/${{ secrets.REMOTE_USER }}/app
          SOURCE: "Frontend-projetoMima/projeto-MimaStore/"
          ARGS: "-rltgoDzvO --delete"

      # 7Ô∏è‚É£ Configurar Docker e rodar container na EC2
      - name: FE - Configurar Docker e rodar container
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ matrix.host }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "üöÄ Configurando Docker e subindo container..."

            # Instala Docker se n√£o existir
            if ! command -v docker &> /dev/null; then
              echo "‚öôÔ∏è Instalando Docker..."
              sudo yum install -y docker || sudo dnf install -y docker
              sudo systemctl enable docker
              sudo systemctl start docker
              sudo usermod -aG docker $USER
            fi

            cd /home/${{ secrets.REMOTE_USER }}/app

            # Para containers antigos
            docker stop mimastore || true
            docker rm mimastore || true

            # Build e run do novo container
            docker build -t mimastore-frontend .
            docker run -d -p 80:80 --name mimastore mimastore-frontend

            echo "‚úÖ Deploy finalizado e container em execu√ß√£o!"
